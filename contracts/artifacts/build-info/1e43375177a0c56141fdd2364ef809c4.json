{
	"id": "1e43375177a0c56141fdd2364ef809c4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"test.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title MaxUint\r\n * @dev A contract to demonstrate how to get the maximum value of a uint256.\r\n */\r\ncontract MaxUint {\r\n\r\n    /**\r\n     * @dev This function returns the maximum value that can be stored in a uint256.\r\n     * The `type(uint256).max` expression is the modern and recommended way to do this.\r\n     * @return The maximum uint256 value, which is 2^256 - 1.\r\n     */\r\n    function getMaxValue() public pure returns (uint256) {\r\n        return type(uint256).max;\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"test.sol": {
				"MaxUint": {
					"abi": [
						{
							"inputs": [],
							"name": "getMaxValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "A contract to demonstrate how to get the maximum value of a uint256.",
						"kind": "dev",
						"methods": {
							"getMaxValue()": {
								"details": "This function returns the maximum value that can be stored in a uint256. The `type(uint256).max` expression is the modern and recommended way to do this.",
								"returns": {
									"_0": "The maximum uint256 value, which is 2^256 - 1."
								}
							}
						},
						"title": "MaxUint",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test.sol\":167:548  contract MaxUint {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"test.sol\":167:548  contract MaxUint {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4c9eb4d4\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"test.sol\":449:545  function getMaxValue() public pure returns (uint256) {... */\n    tag_3:\n      not(0x00)\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"test.sol\":449:545  function getMaxValue() public pure returns (uint256) {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n\n    auxdata: 0xa26469706673582212205d96fa340196eb938faf994f2886fc3abedc7140ee431a54f88b8dccd8ee851a64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b50607480601a5f395ff3fe6080604052348015600e575f5ffd5b50600436106026575f3560e01c80634c9eb4d414602a575b5f5ffd5b5f1960405190815260200160405180910390f3fea26469706673582212205d96fa340196eb938faf994f2886fc3abedc7140ee431a54f88b8dccd8ee851a64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x74 DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4C9EB4D4 EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 NOT PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TSTORE SWAP7 STATICCALL CALLVALUE ADD SWAP7 0xEB SWAP4 DUP16 0xAF SWAP10 0x4F 0x28 DUP7 0xFC GASPRICE 0xBE 0xDC PUSH18 0x40EE431A54F88B8DCCD8EE851A64736F6C63 NUMBER STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "167:381:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getMaxValue_15": {
									"entryPoint": null,
									"id": 15,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:193:1",
										"nodeType": "YulBlock",
										"src": "0:193:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:1",
													"nodeType": "YulBlock",
													"src": "115:76:1",
													"statements": [
														{
															"nativeSrc": "125:26:1",
															"nodeType": "YulAssignment",
															"src": "125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:1",
																		"nodeType": "YulLiteral",
																		"src": "148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:1"
																},
																"nativeSrc": "133:18:1",
																"nodeType": "YulFunctionCall",
																"src": "133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nativeSrc": "160:25:1",
																"nodeType": "YulFunctionCall",
																"src": "160:25:1"
															},
															"nativeSrc": "160:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:1",
														"nodeType": "YulTypedName",
														"src": "84:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:1",
														"nodeType": "YulTypedName",
														"src": "95:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:1",
														"nodeType": "YulTypedName",
														"src": "106:4:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b50600436106026575f3560e01c80634c9eb4d414602a575b5f5ffd5b5f1960405190815260200160405180910390f3fea26469706673582212205d96fa340196eb938faf994f2886fc3abedc7140ee431a54f88b8dccd8ee851a64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4C9EB4D4 EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 NOT PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TSTORE SWAP7 STATICCALL CALLVALUE ADD SWAP7 0xEB SWAP4 DUP16 0xAF SWAP10 0x4F 0x28 DUP7 0xFC GASPRICE 0xBE 0xDC PUSH18 0x40EE431A54F88B8DCCD8EE851A64736F6C63 NUMBER STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "167:381:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;449:96;-1:-1:-1;;449:96:0;;160:25:1;;;148:2;133:18;449:96:0;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "23200",
								"executionCost": "73",
								"totalCost": "23273"
							},
							"external": {
								"getMaxValue()": "147"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 167,
									"end": 548,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 167,
									"end": 548,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 167,
									"end": 548,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 167,
									"end": 548,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 167,
									"end": 548,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 167,
									"end": 548,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 167,
									"end": 548,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 167,
									"end": 548,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 167,
									"end": 548,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 548,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 548,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 167,
									"end": 548,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 167,
									"end": 548,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 167,
									"end": 548,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 167,
									"end": 548,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 548,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 167,
									"end": 548,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 548,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 548,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 167,
									"end": 548,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 548,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205d96fa340196eb938faf994f2886fc3abedc7140ee431a54f88b8dccd8ee851a64736f6c634300081e0033",
									".code": [
										{
											"begin": 167,
											"end": 548,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 167,
											"end": 548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 167,
											"end": 548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 167,
											"end": 548,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 167,
											"end": 548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 548,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 167,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 167,
											"end": 548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 167,
											"end": 548,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 548,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 548,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 167,
											"end": 548,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 167,
											"end": 548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 167,
											"end": 548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 167,
											"end": 548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 167,
											"end": 548,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 167,
											"end": 548,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 167,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 167,
											"end": 548,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 548,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 167,
											"end": 548,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 167,
											"end": 548,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 167,
											"end": 548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 548,
											"name": "PUSH",
											"source": 0,
											"value": "4C9EB4D4"
										},
										{
											"begin": 167,
											"end": 548,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 167,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 167,
											"end": 548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 167,
											"end": 548,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 167,
											"end": 548,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 548,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 548,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 449,
											"end": 545,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 449,
											"end": 545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 449,
											"end": 545,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 545,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 449,
											"end": 545,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 545,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 449,
											"end": 545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 449,
											"end": 545,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 449,
											"end": 545,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 449,
											"end": 545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 449,
											"end": 545,
											"name": "RETURN",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"test.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getMaxValue()": "4c9eb4d4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getMaxValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A contract to demonstrate how to get the maximum value of a uint256.\",\"kind\":\"dev\",\"methods\":{\"getMaxValue()\":{\"details\":\"This function returns the maximum value that can be stored in a uint256. The `type(uint256).max` expression is the modern and recommended way to do this.\",\"returns\":{\"_0\":\"The maximum uint256 value, which is 2^256 - 1.\"}}},\"title\":\"MaxUint\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test.sol\":\"MaxUint\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"test.sol\":{\"keccak256\":\"0xd1fdad40ae7a7934d9e12112d9e426d9cc60fc705b7e4dab9335a47ffd0d09bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86e398c8fac61953cf6a33ba8ae6fd264a3d62dd5372271a79060659868254bb\",\"dweb:/ipfs/QmbYTZ6htDed6asez8bhwbHngCS2TPFj1RvUZgVErKULW7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"test.sol": {
				"ast": {
					"absolutePath": "test.sol",
					"exportedSymbols": {
						"MaxUint": [
							16
						]
					},
					"id": 17,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MaxUint",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "60:105:0",
								"text": " @title MaxUint\n @dev A contract to demonstrate how to get the maximum value of a uint256."
							},
							"fullyImplemented": true,
							"id": 16,
							"linearizedBaseContracts": [
								16
							],
							"name": "MaxUint",
							"nameLocation": "176:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 14,
										"nodeType": "Block",
										"src": "502:43:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 10,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "525:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 9,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "525:7:0",
																	"typeDescriptions": {}
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																}
															],
															"id": 8,
															"name": "type",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967269,
															"src": "520:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "520:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_magic_meta_type_t_uint256",
															"typeString": "type(uint256)"
														}
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "534:3:0",
													"memberName": "max",
													"nodeType": "MemberAccess",
													"src": "520:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 7,
												"id": 13,
												"nodeType": "Return",
												"src": "513:24:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "193:250:0",
										"text": " @dev This function returns the maximum value that can be stored in a uint256.\n The `type(uint256).max` expression is the modern and recommended way to do this.\n @return The maximum uint256 value, which is 2^256 - 1."
									},
									"functionSelector": "4c9eb4d4",
									"id": 15,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMaxValue",
									"nameLocation": "458:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "469:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "493:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:0"
									},
									"scope": 16,
									"src": "449:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 17,
							"src": "167:381:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:517:0"
				},
				"id": 0
			}
		}
	}
}